package br.com.tcc.achileydlacroix.reconautomation.vulnerability;

import br.com.tcc.achileydlacroix.reconautomation.domain.Domain;
import br.com.tcc.achileydlacroix.reconautomation.domain.subdomain.Subdomain;
import jakarta.persistence.*;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import org.springframework.util.Assert;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Objects;

@Entity
@Table(name = "vulnerabilities")
public class Vulnerability {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    @NotBlank
    @Size(max = 2000)
    private String info;
    @ManyToOne
    @JoinColumn(name = "domain_id")
    private Domain domain;
    @ManyToOne
    @JoinColumn(name = "subdomain_id")
    private Subdomain subdomain;
    @Column(nullable = false)
    private LocalDate firstSeen = LocalDate.now();

    @Deprecated
    public Vulnerability() {
    }

    public Long getId() {
        return id;
    }

    public @NotBlank String getInfo() {
        return info;
    }

    public LocalDate getFirstSeen() {
        return firstSeen;
    }

    public Vulnerability(@NotBlank String info) {
        Assert. hasLength(info, "O campo info nao pode estar em branco");
        this.info = info;
    }

    public void setDomain(Domain domain) {
        this.domain = domain;
    }

    public void setSubdomain(Subdomain subdomain) {
        this.subdomain = subdomain;
    }
}
