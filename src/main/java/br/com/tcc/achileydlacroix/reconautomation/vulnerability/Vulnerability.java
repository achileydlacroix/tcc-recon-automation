package br.com.tcc.achileydlacroix.reconautomation.vulnerability;

import jakarta.persistence.*;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import org.springframework.util.Assert;

import java.time.LocalDateTime;
import java.util.Objects;

@Entity
@Table(name = "vulnerabilities")
public class Vulnerability {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    @NotBlank
    @Size(max = 200)
    private String name;
    @NotNull
    private SeverityEnum severity;
    @NotBlank
    @Size(max = 500)
    private String payload;
    @NotBlank
    @Size(max = 150)
    private String target;
    @Column(nullable = false)
    private LocalDateTime firstSeen = LocalDateTime.now();
    private LocalDateTime lastSeen;

    @Deprecated
    public Vulnerability() {
    }

    public Vulnerability(@NotBlank String name, @NotNull SeverityEnum severity, @NotBlank String target, @NotBlank String payload) {
        Assert.notNull(severity, "O campo severity nao pode estar em branco");
        Assert.hasLength(target, "O campo target nao pode estar em branco");
        Assert.hasLength(name, "O campo name nao pode estar em branco");
        Assert.hasLength(payload, "O campo payload nao pode estar em branco");

        this.name = name;
        this.severity = severity;
        this.target = target;
        this.payload = payload;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        Vulnerability that = (Vulnerability) o;
        return Objects.equals(id, that.id) && Objects.equals(name, that.name) && Objects.equals(target, that.target);
    }

    @Override
    public int hashCode() {
        return Objects.hashCode(id);
    }

    public SeverityEnum getSeverity() {
        return severity;
    }

    public String getName() {
        return name;
    }

    public String getPayload() {
        return payload;
    }

    public String getTarget() {
        return target;
    }

    public LocalDateTime getFirstSeen() {
        return firstSeen;
    }

    public LocalDateTime getLastSeen() {
        return lastSeen;
    }

    public void setLastSeen(LocalDateTime lastSeen) {
        this.lastSeen = lastSeen;
    }
}
